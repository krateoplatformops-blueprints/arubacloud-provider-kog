// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Krateo Support",
            "url": "https://krateo.io",
            "email": "contact@krateoplatformops.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/projects/{projectId}/providers/Aruba.Network/vpcs/{vpcId}/subnets": {
            "get": {
                "description": "List Subnets on Aruba Cloud using the provided project and vpc details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "List Subnets on Aruba Cloud",
                "operationId": "list-subnets",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "VPC ID",
                        "name": "vpcId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "API version (e.g., 1.0)",
                        "name": "api-version",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Filter expression",
                        "name": "filter",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort expression",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Projection expression",
                        "name": "projection",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit for pagination",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Bearer Token (Bearer \u003ctoken\u003e)",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of subnets",
                        "schema": {
                            "$ref": "#/definitions/cmd_subnet-plugin_handlers.FlattenedSubnetListResponseDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "description": "Create a new Subnet on Aruba Cloud using the provided project and vpc details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new Subnet on Aruba Cloud",
                "operationId": "post-subnet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "VPC ID",
                        "name": "vpcId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "API version (e.g., 1.0)",
                        "name": "api-version",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer Token (Bearer \u003ctoken\u003e)",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Subnet creation request body",
                        "name": "subnetCreate",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cmd_subnet-plugin_handlers.FlattenedCreateSubnetRequestDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Subnet details",
                        "schema": {
                            "$ref": "#/definitions/cmd_subnet-plugin_handlers.FlattenedSubnetResponseDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/projects/{projectId}/providers/Aruba.Network/vpcs/{vpcId}/subnets/{id}": {
            "get": {
                "description": "Get a Subnet from Aruba Cloud using the provided project, vpc, and subnet details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get a Subnet from Aruba Cloud",
                "operationId": "get-subnet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "VPC ID",
                        "name": "vpcId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Subnet ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "API version (e.g., 1.0)",
                        "name": "api-version",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "if the resource exists in status 'Deleted', returns NotFound according to the value of this flag",
                        "name": "ignoreDeletedStatus",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Bearer Token (Bearer \u003ctoken\u003e)",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subnet details",
                        "schema": {
                            "$ref": "#/definitions/cmd_subnet-plugin_handlers.FlattenedSubnetResponseDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "description": "Update a Subnet on Aruba Cloud using the provided project, vpc, and subnet details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a Subnet on Aruba Cloud",
                "operationId": "put-subnet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "VPC ID",
                        "name": "vpcId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Subnet ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "API version (e.g., 1.0)",
                        "name": "api-version",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer Token (Bearer \u003ctoken\u003e)",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Subnet update request body",
                        "name": "subnetUpdate",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cmd_subnet-plugin_handlers.FlattenedUpdateSubnetRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subnet details",
                        "schema": {
                            "$ref": "#/definitions/cmd_subnet-plugin_handlers.FlattenedSubnetResponseDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        }
    },
    "definitions": {
        "cmd_subnet-plugin_handlers.CategoryResponseDto": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "typology": {
                    "$ref": "#/definitions/cmd_subnet-plugin_handlers.TypologyResponseDto"
                }
            }
        },
        "cmd_subnet-plugin_handlers.DhcpDto": {
            "type": "object",
            "properties": {
                "dns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "enabled": {
                    "type": "boolean"
                },
                "range": {
                    "$ref": "#/definitions/cmd_subnet-plugin_handlers.RangeDto"
                },
                "routes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cmd_subnet-plugin_handlers.RouteDto"
                    }
                }
            }
        },
        "cmd_subnet-plugin_handlers.DhcpResponseDto": {
            "type": "object",
            "properties": {
                "dns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "enabled": {
                    "type": "boolean"
                },
                "range": {
                    "$ref": "#/definitions/cmd_subnet-plugin_handlers.RangeResponseDto"
                },
                "routes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cmd_subnet-plugin_handlers.RouteResponseDto"
                    }
                }
            }
        },
        "cmd_subnet-plugin_handlers.DisableStatusInfoResponseDto": {
            "type": "object",
            "properties": {
                "isDisabled": {
                    "type": "boolean"
                },
                "previousStatus": {
                    "$ref": "#/definitions/cmd_subnet-plugin_handlers.PreviousStatusResponseDto"
                },
                "reasons": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "cmd_subnet-plugin_handlers.FlattenedCreateSubnetRequestDto": {
            "type": "object",
            "properties": {
                "location": {
                    "$ref": "#/definitions/cmd_subnet-plugin_handlers.LocationDto"
                },
                "name": {
                    "type": "string"
                },
                "properties": {
                    "$ref": "#/definitions/cmd_subnet-plugin_handlers.SubnetPropertiesDto"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "cmd_subnet-plugin_handlers.FlattenedSubnetListResponseDto": {
            "type": "object",
            "properties": {
                "first": {
                    "type": "string"
                },
                "last": {
                    "type": "string"
                },
                "next": {
                    "type": "string"
                },
                "prev": {
                    "type": "string"
                },
                "self": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cmd_subnet-plugin_handlers.FlattenedSubnetResponseDto"
                    }
                }
            }
        },
        "cmd_subnet-plugin_handlers.FlattenedSubnetResponseDto": {
            "type": "object",
            "properties": {
                "category": {
                    "$ref": "#/definitions/cmd_subnet-plugin_handlers.CategoryResponseDto"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdUser": {
                    "type": "string"
                },
                "creationDate": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/cmd_subnet-plugin_handlers.LocationResponseDto"
                },
                "name": {
                    "type": "string"
                },
                "project": {
                    "$ref": "#/definitions/cmd_subnet-plugin_handlers.ProjectResponseDto"
                },
                "properties": {
                    "$ref": "#/definitions/cmd_subnet-plugin_handlers.SubnetPropertiesResponseDto"
                },
                "status": {
                    "$ref": "#/definitions/cmd_subnet-plugin_handlers.StatusResponseDto"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updateDate": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                },
                "updatedUser": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "cmd_subnet-plugin_handlers.FlattenedUpdateSubnetRequestDto": {
            "type": "object",
            "properties": {
                "location": {
                    "$ref": "#/definitions/cmd_subnet-plugin_handlers.LocationDto"
                },
                "name": {
                    "type": "string"
                },
                "properties": {
                    "$ref": "#/definitions/cmd_subnet-plugin_handlers.SubnetUpdatePropertiesDto"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "cmd_subnet-plugin_handlers.GenericResourceResponseDto": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string"
                }
            }
        },
        "cmd_subnet-plugin_handlers.LinkedResourceResponseDto": {
            "type": "object",
            "properties": {
                "strictCorrelation": {
                    "type": "boolean"
                },
                "uri": {
                    "type": "string"
                }
            }
        },
        "cmd_subnet-plugin_handlers.LocationDto": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                }
            }
        },
        "cmd_subnet-plugin_handlers.LocationResponseDto": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "cmd_subnet-plugin_handlers.NetworkDto": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                }
            }
        },
        "cmd_subnet-plugin_handlers.NetworkResponseDto": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "gateway": {
                    "type": "string"
                }
            }
        },
        "cmd_subnet-plugin_handlers.PreviousStatusResponseDto": {
            "type": "object",
            "properties": {
                "creationDate": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "cmd_subnet-plugin_handlers.ProjectResponseDto": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "cmd_subnet-plugin_handlers.RangeDto": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "start": {
                    "type": "string"
                }
            }
        },
        "cmd_subnet-plugin_handlers.RangeResponseDto": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "last": {
                    "type": "string"
                },
                "start": {
                    "type": "string"
                }
            }
        },
        "cmd_subnet-plugin_handlers.RouteDto": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "gateway": {
                    "type": "string"
                }
            }
        },
        "cmd_subnet-plugin_handlers.RouteResponseDto": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "gateway": {
                    "type": "string"
                }
            }
        },
        "cmd_subnet-plugin_handlers.StatusResponseDto": {
            "type": "object",
            "properties": {
                "creationDate": {
                    "type": "string"
                },
                "disableStatusInfo": {
                    "$ref": "#/definitions/cmd_subnet-plugin_handlers.DisableStatusInfoResponseDto"
                },
                "failureReason": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "cmd_subnet-plugin_handlers.SubnetPropertiesDto": {
            "type": "object",
            "properties": {
                "default": {
                    "description": "\"Indicates if the subnet must be a default subnet.\\r\\nOnly one default subnet for vpc is admissible.\"",
                    "type": "boolean"
                },
                "dhcp": {
                    "$ref": "#/definitions/cmd_subnet-plugin_handlers.DhcpDto"
                },
                "network": {
                    "$ref": "#/definitions/cmd_subnet-plugin_handlers.NetworkDto"
                },
                "type": {
                    "description": "\"Type of the subnet.\\r\\nAvailable values:\\r\\n- Basic\\r\\n- Advanced\\r\\n\\r\\nWith Basic type, every configuration settings of the subnet will be automatically handled by the CMP.\\r\\nWith Advanced type, configuration settings must be evaluated by the user.\"",
                    "allOf": [
                        {
                            "$ref": "#/definitions/cmd_subnet-plugin_handlers.SubnetType"
                        }
                    ]
                }
            }
        },
        "cmd_subnet-plugin_handlers.SubnetPropertiesResponseDto": {
            "type": "object",
            "properties": {
                "default": {
                    "type": "boolean"
                },
                "dhcp": {
                    "$ref": "#/definitions/cmd_subnet-plugin_handlers.DhcpResponseDto"
                },
                "linkedResources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cmd_subnet-plugin_handlers.LinkedResourceResponseDto"
                    }
                },
                "network": {
                    "$ref": "#/definitions/cmd_subnet-plugin_handlers.NetworkResponseDto"
                },
                "type": {
                    "$ref": "#/definitions/cmd_subnet-plugin_handlers.SubnetType"
                },
                "vpc": {
                    "$ref": "#/definitions/cmd_subnet-plugin_handlers.GenericResourceResponseDto"
                }
            }
        },
        "cmd_subnet-plugin_handlers.SubnetType": {
            "type": "string",
            "enum": [
                "Basic",
                "Advanced"
            ],
            "x-enum-varnames": [
                "SubnetTypeBasic",
                "SubnetTypeAdvanced"
            ]
        },
        "cmd_subnet-plugin_handlers.SubnetUpdatePropertiesDto": {
            "type": "object",
            "properties": {
                "default": {
                    "type": "boolean"
                }
            }
        },
        "cmd_subnet-plugin_handlers.TypologyResponseDto": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "Aruba Cloud Subnet Plugin API for Krateo Operator Generator (KOG)",
	Description:      "Simple wrapper around Aruba Cloud API to provide consistency of API response for Krateo Operator Generator (KOG)",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
